{"version":3,"sources":["components/elements/Header/Header.js","config.js","actions/index.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","containers/HomeContainer.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","containers/MovieContainer.js","components/elements/NotFound/NotFound.js","components/App/App.js","reducers/home_reducer.js","reducers/movie_reducer.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","GET_POPULAR_MOVIES","SEARCH_MOVIES","LOAD_MORE_MOVIES","CLEAR_MOVIES","GET_MOVIE","CLEAR_MOVIE","SHOW_LOADING_SPINNER","showLoadingSpinner","type","payload","HeroImage","_ref","image","title","text","style","background","concat","SearchBar","state","value","timeout","doSearch","event","target","_this","setState","clearTimeout","setTimeout","props","callback","this","react_fontawesome_lib_default","name","size","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchMovies","loadMoreMovies","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","HomeContainer","getMovies","getPopularMovies","clearMovies","_this$props","components_Home_Home","Object","assign","mapDispatchToProps","endpoint","request","fetch","then","result","json","catch","error","console","objectSpread","connect","home","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","MovieContainer","getMovie","clearMovie","match","params","components_Movie_Movie","newState","status","code","crew","filter","member","job","cast","NotFound","App","BrowserRouter","Fragment","elements_Header_Header","Switch","Route","path","component","exact","defaultState","rootReducer","combineReducers","arguments","undefined","action","results","page","total_pages","toConsumableArray","storeWithMiddleware","applyMiddleware","promiseMiddleware","createStore","ReactDOM","render","es","store","reducers","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e746d555.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"rmdb-header\">\r\n    <div className=\"rmdb-header-content\">\r\n      <Link to=\"/\">\r\n        <img className=\"rmdb-logo\" src=\"/images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\r\n      </Link>\r\n      <img className=\"rmdb-tmdb-logo\" src=\"/images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header;","// Configuration for IMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\n\r\n\r\n\r\n// 019e8f375549e0bbd4a4191862ebc88f\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280'\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500'\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","import { API_KEY, API_URL } from '../config'\r\n\r\n// Action types for Home\r\nexport const GET_POPULAR_MOVIES = \"GET_POPULAR_MOVIES\";\r\nexport const SEARCH_MOVIES = \"SEARCH_MOVIES\";\r\nexport const LOAD_MORE_MOVIES = \"LOAD_MORE_MOVIES\";\r\nexport const CLEAR_MOVIES = \"CLEAR_MOVIES\";\r\n\r\n\r\n// action types for Movie\r\nexport const GET_MOVIE = \"GET_MOVIE\";\r\nexport const CLEAR_MOVIE = \"CLEAR_MOVIE\";\r\n\r\n\r\n// Action type for both Home and Movie Component\r\n// We are showing the loading spinner when fetching the movies\r\nexport const SHOW_LOADING_SPINNER = \"SHOW_LOADING_SPINNER\";\r\n\r\n// action creator for Both\r\nexport function showLoadingSpinner() {\r\n    return {\r\n        type: SHOW_LOADING_SPINNER,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n// action creators for Movie\r\nexport function clearMovie() {\r\n    return {\r\n        type: CLEAR_MOVIE,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\nexport function getMovie(movieId) {\r\n    let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n    let newState = [];\r\n\r\n    const request = fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            if (result.status.code) {\r\n                //if we don't find any movie\r\n                return newState;\r\n            } else {\r\n                newState = { movie: result };\r\n                endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n\r\n                return fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n\r\n                        const directors = result.crew.filter((member) => member.job === \"Director\");\r\n                        newState.actors = result.cast;\r\n                        newState.directors = directors;\r\n\r\n                        return newState;\r\n                    })\r\n            }\r\n        })\r\n        .catch(error => console.error(\"Error:\", error));\r\n\r\n    return {\r\n        type: GET_MOVIE,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\n// action creators for Home\r\n\r\nexport function getPopularMovies() {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    const request = fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            return result;\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n\r\n    // Since action is an object\r\n    return {\r\n        type: GET_POPULAR_MOVIES,\r\n        // request contains all the movies we fetching here\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function searchMovies(searchTerm) {\r\n    let endpoint;\r\n    if (!searchTerm) {\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n\r\n    const request = fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            return { ...result, searchTerm };\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n\r\n    // Since action is an object\r\n    return {\r\n        type: SEARCH_MOVIES,\r\n        // request contains all the movies we fetching here\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loadMoreMovies(searchTerm, currentPage) {\r\n    let endpoint;\r\n    if (!searchTerm) {\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\r\n    } else {\r\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\r\n    }\r\n\r\n    const request = fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            return result;\r\n        })\r\n        .catch(error => console.error('Error:', error));\r\n\r\n    // Since action is an object\r\n    return {\r\n        type: LOAD_MORE_MOVIES,\r\n        // request contains all the movies we fetching here\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearMovies() {\r\n    return {\r\n        type: CLEAR_MOVIES,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n// this.setState({\r\n//     movies: [...movies, ...result.results],\r\n//     heroImage: heroImage || result.results[0],\r\n//     loading: false,\r\n//     currentPage: result.page,\r\n//     totalPages: result.total_pages\r\n// , () => {\r\n//     // Remember state for the next mount if we´re not in a search view\r\n//     if (searchTerm === \"\") {\r\n//       sessionStorage.setItem('HomeState', JSON.stringify(this.state));\r\n//     }\r\n//   })","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <div className=\"rmdb-heroimage\"\r\n    style={{\r\n      background:\r\n        `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%,rgba(0,0,0,0)\r\n        41%,rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${image}'), #1c1c1c`\r\n    }}\r\n  >\r\n    <div className=\"rmdb-heroimage-content\">\r\n      <div className=\"rmdb-heroimage-text\">\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n  // Must have this here so we can reset it\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ value })\r\n    clearTimeout(this.timeout);\r\n    // Set a timeout to wait for the user to stop writing\r\n    // So we don´t have to make unnessesary calls\r\n    this.timeout = setTimeout( () => {\r\n      this.props.callback(value);\r\n    }, 500);\r\n  }\r\n\r\n  render () {\r\n    // ES6 Destructuring state\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={value}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = ({ header, loading, children }) => {\r\n\r\n  const renderElements = () => {\r\n    const gridElements = children.map( (element, i) => (\r\n      <div key={i} className=\"rmdb-grid-element\">\r\n        {element}\r\n      </div>\r\n    ))\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {header && !loading ? <h1>{header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">\r\n         {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\r\n  <div className=\"rmdb-moviethumb\">\r\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\r\n    {clickable ?\r\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n      :\r\n      <img src={image} alt=\"moviethumb\" />\r\n    }\r\n  </div>\r\n)\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string,\r\n  clickable: PropTypes.bool\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = ({ text, onClick }) => (\r\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\r\n    <p>{text}</p>\r\n  </div>\r\n)\r\n\r\nLoadMoreBtn.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"loader\"></div>\r\n)\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\n// Presentational Component\r\nconst Home = ({movies, heroImage, loading, currentPage, totalPages, searchTerm, searchMovies, loadMoreMovies}) => (\r\n  <div className=\"rmdb-home\">\r\n    {heroImage ?\r\n      <div>\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n          title={heroImage.original_title}\r\n          text={heroImage.overview}\r\n        />\r\n        <SearchBar callback={searchMovies} />\r\n      </div> : null}\r\n    <div className=\"rmdb-home-grid\">\r\n      <FourColGrid\r\n        header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n        loading={loading}\r\n      >\r\n        {movies.map((element, i) => (\r\n          <MovieThumb\r\n            key={i}\r\n            clickable={true}\r\n            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n            movieId={element.id}\r\n            movieName={element.original_title}\r\n          />\r\n        ))}\r\n      </FourColGrid>\r\n      {loading ? <Spinner /> : null}\r\n      {(currentPage <= totalPages && !loading) ?\r\n        <LoadMoreBtn text=\"Load More\" onClick={loadMoreMovies} />\r\n        : null\r\n      }\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Home;\r\n\r\n\r\n//  render() {\r\n    // ES6 Destructuring the state\r\n    //const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\r\n\r\n    //return (","import React, { Component } from 'react';\r\n// To connect this component to the redux store\r\nimport { connect } from 'react-redux';\r\n// Then, import all our action creators\r\nimport {\r\n    getPopularMovies,\r\n    searchMovies,\r\n    loadMoreMovies,\r\n    clearMovies,\r\n    showLoadingSpinner\r\n} from '../actions';\r\n\r\nimport Home from '../components/Home/Home'\r\n\r\n\r\nclass HomeContainer extends Component {\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    getMovies = () => {\r\n        // from our props we grabbed our action creators\r\n        this.props.showLoadingSpinner(); // showing the loading spinner because we are grabbing data\r\n        this.props.getPopularMovies()  // grab the popular movies\r\n    }\r\n\r\n    searchMovies = searchTerm => {\r\n        //When we search for movies, we want movies that already showing to disappear and loading spinner to show\r\n        // else they will be present there and loading spinner would be present below them\r\n        this.props.clearMovies();\r\n        this.props.showLoadingSpinner(); // showing the loading spinner because we are grabbing data\r\n        this.props.searchMovies(searchTerm);\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const { searchTerm, currentPage } = this.props;  // destructuring\r\n\r\n        this.props.showLoadingSpinner();\r\n        this.props.loadMoreMovies(searchTerm, currentPage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Home\r\n                {...this.props}\r\n                searchMovies={this.searchMovies}\r\n                loadMoreMovies={this.loadMoreMovies}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //returning home from redux state\r\n    return state.home;\r\n}\r\n\r\n// dispatching our actions to props\r\nconst mapDispatchToProps = {\r\n    getPopularMovies,\r\n    searchMovies,\r\n    loadMoreMovies,\r\n    clearMovies,\r\n    showLoadingSpinner\r\n}\r\n\r\n\r\nexport default connect(  // A higher order function \r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomeContainer); // HomeContainer gets connect to the redux store\r\n\r\n// class Home extends Component {\r\n\r\n\r\n//     componentDidMount() {\r\n//       if (sessionStorage.getItem('HomeState')) {\r\n//         let state = JSON.parse(sessionStorage.getItem('HomeState'))\r\n//         this.setState({ ...state })\r\n//       } else {\r\n//         this.setState({ loading: true })\r\n//         this.fetchItems(endpoint);\r\n//       }\r\n//     }\r\n\r\n//     searchItems = (searchTerm) => {\r\n//       let endpoint = '';\r\n//       this.setState({\r\n//         movies: [],\r\n//         loading: true,\r\n//         searchTerm\r\n//       })\r\n\r\n\r\n//       this.fetchItems(endpoint);\r\n//     }\r\n\r\n//     loadMoreItems = () => {\r\n//       // ES6 Destructuring the state\r\n//       const { searchTerm, currentPage } = this.state;\r\n\r\n//       let endpoint = '';\r\n//       this.setState({ loading: true })\r\n\r\n\r\n//       this.fetchItems(endpoint);\r\n//     }\r\n\r\n//     fetchItems = (endpoint) => {\r\n//       // ES6 Destructuring the state\r\n//       const { movies, heroImage, searchTerm } = this.state;\r\n\r\n\r\n//     }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ movie }) => (\r\n  <div className=\"rmdb-navigation\">\r\n    <div className=\"rmdb-navigation-content\">\r\n      <Link to=\"/\">\r\n        <p>Home</p>\r\n      </Link>\r\n      <p>/</p>\r\n      <p>{movie}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nNavigation.propTypes = {\r\n  movie: PropTypes.string\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport PropTypes from 'prop-types';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = ({ movie, directors }) => (\r\n  <div className=\"rmdb-movieinfo\"\r\n    style={{\r\n      background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\r\n    }}\r\n  >\r\n    <div className=\"rmdb-movieinfo-content\">\r\n      <div className=\"rmdb-movieinfo-thumb\">\r\n        <MovieThumb\r\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\r\n          clickable={false}\r\n        />\r\n      </div>\r\n      <div className=\"rmdb-movieinfo-text\">\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n        <h3>IMDB RATING</h3>\r\n        <div className=\"rmdb-rating\">\r\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.vote_average * 10}></meter>\r\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\r\n        </div>\r\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n        {directors.map( (element, i) => {\r\n          return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n        })}\r\n      </div>\r\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n  directors: PropTypes.array\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n}\r\n// Convert a number to money formatting\r\nexport const convertMoney = (money) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <div className=\"rmdb-movieinfobar\">\r\n    <div className=\"rmdb-movieinfobar-content\">\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(time)}</span>\r\n      </div>\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(budget)}</span>\r\n      </div>\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(revenue)}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport PropTypes from 'prop-types';\r\nimport './Actor.css';\r\n\r\nconst Actor = ({ actor }) => {\r\n\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : './images/no_image.jpg'}\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{actor.character}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nActor.propTypes = {\r\n  actor: PropTypes.object\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nconst Movie = ({ movie, directors, loading, actors }) => (\r\n  <div className=\"rmdb-movie\">\r\n    {movie ?\r\n      <div>\r\n        <Navigation movie={movie.original_title} />\r\n        <MovieInfo movie={movie} directors={directors} />\r\n        <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\r\n      </div>\r\n      : null}\r\n    {actors ?\r\n      <div className=\"rmdb-movie-grid\">\r\n        <FourColGrid header={'Actors'}>\r\n          {actors.map((element, i) => (\r\n            <Actor key={i} actor={element} />\r\n          ))}\r\n        </FourColGrid>\r\n      </div>\r\n      : null}\r\n    {!actors && !loading ? <h1>No movie found</h1> : null}\r\n    {loading ? <Spinner /> : null}\r\n  </div>\r\n)\r\n\r\n\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  getMovie,\r\n  showLoadingSpinner,\r\n  clearMovie\r\n} from '../actions';\r\n\r\nimport Movie from '../components/Movie/Movie';\r\n\r\nclass MovieContainer extends Component {\r\n  componentDidMount() {\r\n\r\n    const { movieId } = this.props.match.params;\r\n    this.getMovie(movieId);\r\n  }\r\n\r\n  getMovie = movieId => {\r\n    this.props.clearMovie();\r\n    this.props.showLoadingSpinner();\r\n    this.props.getMovie(movieId);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Movie\r\n        movie={this.props.movie}\r\n        directors={this.props.directors}\r\n        actors={this.props.actors}\r\n        loading={this.props.loading}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  //returning movie from redux state\r\n  return state.movie;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getMovie,\r\n  clearMovie,\r\n  showLoadingSpinner\r\n}\r\n\r\nexport default connect(  // A higher order function \r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MovieContainer); // HomeContainer gets connect to the redux store\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// state = {\r\n//     movie: null,\r\n//     actors: null,\r\n//     directors: [],\r\n//     loading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     // ES6 destructuring the props\r\n//     const { movieId } = this.props.match.params;\r\n\r\n//     if (localStorage.getItem(`${movieId}`)) {\r\n//       let state = JSON.parse(localStorage.getItem(`${movieId}`))\r\n//       this.setState({ ...state })\r\n//     } else {\r\n//       this.setState({ loading: true })\r\n//       // First fetch the movie ...\r\n//       let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n//       this.fetchItems(endpoint);\r\n//     }\r\n//   }\r\n\r\n//   fetchItems = (endpoint) => {\r\n//     // ES6 destructuring the props\r\n//     const { movieId } = this.props.match.params;\r\n\r\n//     fetch(endpoint)\r\n//     .then(result => result.json())\r\n//     .then(result => {\r\n\r\n//       if (result.status_code) {\r\n//         // If we don't find any movie\r\n//         this.setState({ loading: false });\r\n//       } else {\r\n//         this.setState({ movie: result }, () => {\r\n//           // ... then fetch actors in the setState callback function\r\n//           let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n//           fetch(endpoint)\r\n//           .then(result => result.json())\r\n//           .then(result => {\r\n\r\n//             const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n\r\n//             this.setState({\r\n//               actors: result.cast,\r\n//               directors,\r\n//               loading: false\r\n//             }, () => {\r\n//               localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\r\n//             })\r\n//           })\r\n//         })\r\n//       }\r\n//     })\r\n//     .catch(error => console.error('Error:', error))\r\n//   }","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h1>Whooops. This page doesn't exist</h1>\r\n  </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../../containers/HomeContainer';\r\nimport Movie from '../../containers/MovieContainer';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <React.Fragment>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/:movieId\" component={Movie} exact />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default App;","import {\r\n    GET_POPULAR_MOVIES,\r\n    SEARCH_MOVIES,\r\n    LOAD_MORE_MOVIES,\r\n    CLEAR_MOVIES,\r\n    SHOW_LOADING_SPINNER\r\n} from '../actions/index'\r\n\r\n\r\nconst defaultState = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n}\r\n\r\n// It will take the present state and action will update the state based on the action in the reducer\r\nexport default function (state = defaultState, action) {\r\n    switch(action.type) {\r\n        case GET_POPULAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload.results,\r\n                heroImage: state.heroImage || action.payload.results[0],// It will grab the most popular movie and put the backdrop image in our hero image\r\n                loading: false,\r\n                currentPage: action.payload.page,\r\n                totalPages: action.payload.total_pages,\r\n                searchTerm: \"\"\r\n            }\r\n        case LOAD_MORE_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: [...state.movies, ...action.payload.results],\r\n                loading: false,\r\n                currentPage: action.payload.page,\r\n                totalPages: action.payload.total_pages\r\n            }\r\n\r\n        case SEARCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload.results,\r\n                loading: false,\r\n                currentPage: action.payload.page,\r\n                totalPages: action.payload.total_pages,\r\n                searchTerm: action.payload.searchTerm\r\n            }\r\n        case CLEAR_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: []\r\n            }\r\n        case SHOW_LOADING_SPINNER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_MOVIE,\r\n    SHOW_LOADING_SPINNER,\r\n    CLEAR_MOVIE\r\n} from '../actions';\r\n\r\n\r\nconst defaultState = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n};\r\n\r\nexport default function (state = defaultState, action) {\r\n    switch (action.type) {\r\n        case GET_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload.movie,\r\n                actors: action.payload.actors,\r\n                loading: false,\r\n                directors: action.payload.directors\r\n            }\r\n        case SHOW_LOADING_SPINNER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CLEAR_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: null,\r\n                actors: null,\r\n                directors: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';  // It combines the reducers into one\r\nimport home from './home_reducer';\r\nimport movie from './movie_reducer';\r\n\r\n// combining our reducers\r\nconst rootReducer = combineReducers({\r\n    home,\r\n    movie\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Redux stuff\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport promiseMiddleware from 'redux-promise';\r\n\r\nimport App from './components/App/App';\r\nimport reducers from './reducers'\r\nimport './index.css';\r\n\r\n// sending in our promise middleware\r\n// this will return a function called higher order function that we are directly going to invoke with createStore as parameter\r\nconst storeWithMiddleware = applyMiddleware(promiseMiddleware)(createStore) //created store with middleware\r\n\r\n// Middleware needs to know what reducers it should use\r\nReactDOM.render(<Provider store={storeWithMiddleware(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n        document.getElementById('root')\r\n    );"],"sourceRoot":""}